openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /trip:
    get:
      tags:
      - trip-controller
      operationId: getAll_1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Trip'
    put:
      tags:
      - trip-controller
      operationId: updateStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTripStatusRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TripResponse'
    post:
      tags:
      - trip-controller
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TripRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TripResponse'
  /order/{orderId}/paymentstatus:
    put:
      tags:
      - order-controller
      operationId: updatePaymentStatusType
      parameters:
      - name: orderId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: string
              enum:
              - WAITING
              - COMPLETED
              - FAILED
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /users:
    get:
      tags:
      - user-controller
      operationId: getAll
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags:
      - user-controller
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserResponse'
  /users/login:
    post:
      tags:
      - user-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /ticket:
    get:
      tags:
      - ticket-controller
      operationId: getAll_2
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ticket'
    post:
      tags:
      - ticket-controller
      operationId: create_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Ticket'
  /order:
    get:
      tags:
      - order-controller
      operationId: getAll_3
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      tags:
      - order-controller
      operationId: create_3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    UpdateTripStatusRequest:
      type: object
      properties:
        tripId:
          type: integer
          format: int32
        status:
          type: string
          enum:
          - ACTIVE
          - CANCELED
          - DELETED
        userId:
          type: integer
          format: int32
    TripResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        fromProvince:
          type: string
        toProvince:
          type: string
        createDate:
          type: string
          format: date-time
        status:
          type: string
          enum:
          - ACTIVE
          - CANCELED
          - DELETED
        vehicleType:
          type: string
          enum:
          - BUS
          - PLANE
        vehicleCapacity:
          type: integer
          format: int32
        seatCount:
          type: integer
          format: int32
        price:
          type: number
          format: double
        totalAmount:
          type: number
          format: double
    UserRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        type:
          type: string
          enum:
          - INDIVIDUAL
          - CORPARETE
    UserResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        email:
          type: string
        type:
          type: string
          enum:
          - INDIVIDUAL
          - CORPARETE
    LoginRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    TripRequest:
      type: object
      properties:
        fromProvince:
          type: string
        toProvince:
          type: string
        status:
          type: string
          enum:
          - ACTIVE
          - CANCELED
          - DELETED
        vehicleType:
          type: string
          enum:
          - BUS
          - PLANE
        vehicleCapacity:
          type: integer
          format: int32
        seatCount:
          type: integer
          format: int32
        price:
          type: number
          format: double
        totalAmount:
          type: number
          format: double
        userId:
          type: integer
          format: int32
    TicketRequest:
      type: object
      properties:
        passengerName:
          type: string
        passengerGenderType:
          type: string
          enum:
          - MALE
          - FEMALE
          - OTHER
        seatNumber:
          type: integer
          format: int32
        price:
          type: number
          format: double
        tripId:
          type: integer
          format: int32
        userId:
          type: integer
          format: int32
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int32
        statusType:
          type: string
          enum:
          - WAITING
          - COMPLETED
          - FAILED
        user:
          $ref: '#/components/schemas/User'
        createDate:
          type: string
          format: date-time
    Ticket:
      type: object
      properties:
        id:
          type: integer
          format: int32
        passengerName:
          type: string
        passengerGenderType:
          type: string
          enum:
          - MALE
          - FEMALE
          - OTHER
        seatNumber:
          type: integer
          format: int32
        price:
          type: number
          format: double
        trip:
          $ref: '#/components/schemas/Trip'
        user:
          $ref: '#/components/schemas/User'
        order:
          $ref: '#/components/schemas/Order'
        createDate:
          type: string
          format: date-time
    Trip:
      type: object
      properties:
        id:
          type: integer
          format: int32
        fromProvince:
          type: string
        toProvince:
          type: string
        createDate:
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/User'
        ticketList:
          type: array
          items:
            $ref: '#/components/schemas/Ticket'
        status:
          type: string
          enum:
          - ACTIVE
          - CANCELED
          - DELETED
        vehicleType:
          type: string
          enum:
          - BUS
          - PLANE
        vehicleCapacity:
          type: integer
          format: int32
        seatCount:
          type: integer
          format: int32
        price:
          type: number
          format: double
        totalAmount:
          type: number
          format: double
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        email:
          type: string
        password:
          type: string
        type:
          type: string
          enum:
          - INDIVIDUAL
          - CORPARETE
        roleType:
          type: string
          enum:
          - ADMIN
          - NORMAL
        tripList:
          type: array
          items:
            $ref: '#/components/schemas/Trip'
        ticketList:
          type: array
          items:
            $ref: '#/components/schemas/Ticket'
        createDate:
          type: string
          format: date-time
    OrderRequest:
      type: object
      properties:
        userid:
          type: integer
          format: int32
        ticketRequestList:
          type: array
          items:
            $ref: '#/components/schemas/TicketRequest'
